list=foo,bar
map={var1:1.5, var2:'foo'}

#use ${} inside a property to refer to other property or environment variables
db.conn=url:'https://__', user:'${db.user-info.user:defUser}', pass:'${db.user-info.pass:defPass}'
db.user-info.user=dbUser
db.user-info.pass=dbPass
db.version.major=1
db.version.minor=2
db.version.revision=3

#default profile is always active, and override by profiles in the specified order, if active
#the properties are overridden in layers
my.value1=Default Profile
my.value2=Default Profile
my.value3=Default Profile
my.value4=Default Profile
my.value5=Default Profile
my.value6=Default Profile
my.value7=Default Profile
my.value8=Default Profile

spring.cloud.config.uri=http://localhost:8888
spring.config.import=optional:configserver:
spring.application.name=edu-spring-boot-cloud-config-client

#refresh is required to update properties from config service
#refer to endpoints by their IDs, like: refresh,health,info or * for all
management.endpoints.web.exposure.include=refresh,health,info
management.endpoints.web.exposure.exclude=
#endpoints can be accessed through HTTP or JMX(Java Management Extension)
management.endpoints.jmx.exposure.include=refresh,health,info
management.endpoints.jmx.exposure.exclude=
#endpoints can also be enabled(!= exposed) and configured individually
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
#use @property@ to refer to properties from the POM
management.endpoint.info.enabled=true
management.info.env.enabled=true
info.myapp.java-version=@java.version@
info.myapp.spring-cloud-version=@spring-cloud.version@
#controll contributors info with management.info.<id>.enabled
management.info.java.enabled=true
#some contributors like (git, build) will require to generate the info previously
management.info.git.enabled=true
management.info.build.enabled=true